{"version":3,"sourceRoot":"","sources":["../../src/nationalarchives/tools/_colour.scss","../../src/nationalarchives/utilities/_colour.scss","../../src/nationalarchives/components/global-header/global-header.scss","../../src/nationalarchives/tools/_typography.scss","../../src/nationalarchives/variables/_typography.scss","../../src/nationalarchives/tools/_media.scss","../../src/nationalarchives/components/grid/grid.scss","../../src/nationalarchives/global-header-package.scss","../../src/nationalarchives/tools/_grid.scss","../../src/nationalarchives/components/footer/footer.scss"],"names":[],"mappings":"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AGF,0BACE,kBAGF,0BACE,oBE/CA,kBACE,WACA,UAUI,wBACE,oBACA,UAGF,+BACE,2BAGF,8BACE,0BAVF,uBACE,qBACA,UAGF,8BACE,4BAGF,6BACE,2BAVF,uBACE,UACA,UAGF,8BACE,iBAGF,6BACE,gBAVF,uBACE,qBACA,UAGF,8BACE,4BAGF,6BACE,2BAVF,wBACE,qBACA,UAGF,+BACE,4BAGF,8BACE,2BAVF,uBACE,UACA,UAGF,8BACE,iBAGF,6BACE,gBAVF,wBACE,qBACA,UAGF,+BACE,4BAGF,8BACE,2BAVF,uBACE,qBACA,UAGF,8BACE,4BAGF,6BACE,2BAVF,uBACE,UACA,UAGF,8BACE,iBAGF,6BACE,gBAVF,uBACE,qBACA,UAGF,8BACE,4BAGF,6BACE,2BAVF,yBACE,qBACA,UAGF,gCACE,4BAGF,+BACE,2BAwBN,oBACE,WAEA,SAHF,oBACE,WAEA,SAHF,oBACE,WAEA,SAKF,qBACE,MAFS,EACX,qBACE,MAFS,EACX,qBACE,MAFS,EACX,qBACE,MAFS,EHvCf,kDGdE,yBACE,WACA,UAUI,8BACE,qBACA,UAGF,qCACE,4BAGF,oCACE,2BAVF,8BACE,qBACA,UAGF,qCACE,4BAGF,oCACE,2BAVF,8BACE,UACA,UAGF,qCACE,iBAGF,oCACE,gBAVF,8BACE,qBACA,UAGF,qCACE,4BAGF,oCACE,2BAVF,8BACE,qBACA,UAGF,qCACE,4BAGF,oCACE,2BAwBN,2BACE,WAEA,SAHF,2BACE,WAEA,SAHF,2BACE,WAEA,SAKF,4BACE,MAFS,EACX,4BACE,MAFS,EACX,4BACE,MAFS,EACX,4BACE,MAFS,GH3Bf,wBCgCA,eACE,oBACA,mBAGF,YACE,oBACA,oBD7CF,kDGpBE,wBACE,WACA,UAUI,6BACE,UACA,UAGF,oCACE,iBAGF,mCACE,gBAVF,6BACE,UACA,UAGF,oCACE,iBAGF,mCACE,gBAVF,6BACE,UACA,UAGF,oCACE,iBAGF,mCACE,gBAwBN,0BACE,WAEA,SAHF,0BACE,WAEA,SAHF,0BACE,WAEA,SAKF,2BACE,MAFS,EACX,2BACE,MAFS,EACX,2BACE,MAFS,EACX,2BACE,MAFS,GH3Bf,wBG1BE,uBACE,WACA,UAUI,4BACE,UACA,UAGF,mCACE,iBAGF,kCACE,gBAwBN,yBACE,WAEA,SAHF,yBACE,WAEA,SAHF,yBACE,WAEA,SAKF,0BACE,MAFS,EACX,0BACE,MAFS,EACX,0BACE,MAFS,EACX,0BACE,MAFS,GFwBjB,uNAME,gBACA,eGzFF,YAGE,iBACA,oBAEA,sBACE,gBAEA,kCACE,mBAGF,kCACE,kBAIJ,mBACE,gBACA,gBACA,cAGF,qBACE,kBAGF,kBACE,gBN5BF,eMiCA,oBACE,gBAEA,0BACE,aACA,eACA,aACA,uBAIA,8BACE,uBACA,YACA,YAEA,cAEA,kBACA,cAEA,6BACA,mBAEA,kCACE,YAEA,qBAEA,uCACE,kBAOJ,oCTsCF,gCAIA,oCSnCJ,0BACE,gBACA,aN/EF,eH+HI,0BAIA,sCS9CF,sCAIA,8BACE,iBAQA,mCACE,oBACA,uBNpGN,eH4GI,2CAIA,uCSNE,wCACE,qBAEA,qBAEA,8CNhER,0BACA,0BC3CsC,MK8G9B,kDACE,mBAOV,mBACE,iBN5HF,eMgIE,yBACE,gBAEA,kBJrGJ,wBIkGE,yBAMI,oBAIJ,wBACE,cAEA,qBJ/GJ,wBI4GE,wBAMI,eAQN,eACE,kBACA,oBAGF,qBN7JA,eMgKE,mCACE,mBAGF,iCACE,gBAIJ,0BACE,cAGF,mBACE,kBAEA,wBACE,qBAGF,kCACE,sBAEA,cJjIJ,wBIvDF,YA6LI,cACA,qBT2MF,8BSzYF,YT6GM,wCAIA,oCSqFE,oCTzFF,6BAIA,yCS2FF,0BACE,+BT7EA,yBAIA,sCAyPJ,+CAhRI,wCAIA,oCSqFE,uETzFF,6BAIA,yCS2FF,6DACE,+BT7EA,yBAIA,qCA8PF,+BADF,wCApRI,wCAIA,oCSqFE,gETzFF,6BAIA,yCS2FF,sDACE,+BT7EA,yBAIA,sCOvHN,cACE,kCACA,mCACA,kCACA,8BACA,sBACA,cACA,eAGF,+BAEE,cAEA,mCACE,qBACA,gCAEA,gFPsDF,cACA,kBOlDE,mDPiDF,cACA,0BO9CE,gGJQF,0BACA,0BC3CsC,MGsClC,gBAGF,+CACE,gBAIA,yGPiCJ,cACA,kBO3BF,mBACE,iBAEA,8BACE,aAGF,+BACE,UAEA,oCACE,cACA,gBAGE,+CACE,aAMR,mCACE,gBAEA,wCACE,cAIA,8CACE","file":"global-header-package.css","sourcesContent":["@use \"sass:map\";\n@use \"sass:list\";\n@use \"../variables/colour\";\n@use \"../tools/media\";\n\n@function brand-colour($colour, $opacity: 1) {\n  @return colour.brand-colour($colour, $opacity);\n}\n\n@mixin colour-css-vars($excludes...) {\n  @each $name, $value in colour.$colour-palette-default {\n    @if not list.index($excludes, $name) {\n      --#{$name}: #{$value};\n    }\n  }\n}\n\n@mixin colour-css-vars-dark($excludes...) {\n  @each $name, $value in colour.$colour-palette-dark {\n    @if not list.index($excludes, $name) {\n      --#{$name}: #{$value};\n    }\n  }\n}\n\n@mixin colour-css-vars-high-contrast($excludes...) {\n  @each $name, $value in colour.$colour-palette-high-contrast {\n    @if not list.index($excludes, $name) {\n      --#{$name}: #{$value};\n    }\n  }\n}\n\n@mixin colour-css-vars-high-contrast-dark($excludes...) {\n  @each $name, $value in colour.$colour-palette-high-contrast-dark {\n    @if not list.index($excludes, $name) {\n      --#{$name}: #{$value};\n    }\n  }\n}\n\n@mixin accent-css-vars($colour) {\n  @if $colour == \"yellow\" {\n    --accent-background: #{brand-colour(\"yellow\")} !important;\n    --accent-background-light: #{brand-colour(\"cream\")} !important;\n    --accent-font-base: #{brand-colour(\"black\")} !important;\n    --accent-font-dark: #{brand-colour(\"black\")} !important;\n    --accent-font-light: #{brand-colour(\"black\", 0.7)} !important;\n    --accent-icon-light: #{brand-colour(\"black\", 0.45)} !important;\n    --accent-link: #{brand-colour(\"black\")} !important;\n    --accent-link-visited: #{brand-colour(\"black\")} !important;\n    --accent-keyline: #{brand-colour(\"black\", 0.5)} !important;\n    --accent-keyline-dark: #{brand-colour(\"black\", 0.8)} !important;\n    --button-accent-background: #{brand-colour(\"yellow\")} !important;\n  } @else {\n    --accent-font-base: #{brand-colour(\"white\")} !important;\n    --accent-font-dark: #{brand-colour(\"white\")} !important;\n    --accent-font-light: #{brand-colour(\"white\", 0.7)} !important;\n    --accent-icon-light: #{brand-colour(\"white\", 0.45)} !important;\n    --accent-link: #{brand-colour(\"white\")} !important;\n    --accent-link-visited: #{brand-colour(\"white\")} !important;\n    --accent-keyline: #{brand-colour(\"white\", 0.5)} !important;\n    --accent-keyline-dark: #{brand-colour(\"white\", 0.8)} !important;\n    --button-accent-text: #{brand-colour(\"white\")} !important;\n    @if $colour == \"pink\" {\n      --accent-background: #{brand-colour(\"maroon\")} !important;\n      --accent-background-light: #{brand-colour(\"pastel-pink\")} !important;\n      --button-accent-background: #{brand-colour(\"maroon\")} !important;\n    } @else if $colour == \"orange\" {\n      --accent-background: #{brand-colour(\"chestnut\")} !important;\n      --accent-background-light: #{brand-colour(\"pastel-orange\")} !important;\n      --button-accent-background: #{brand-colour(\"chestnut\")} !important;\n    } @else if $colour == \"green\" {\n      --accent-background: #{brand-colour(\"forest\")} !important;\n      --accent-background-light: #{brand-colour(\"pastel-green\")} !important;\n      --button-accent-background: #{brand-colour(\"forest\")} !important;\n    } @else if $colour == \"blue\" {\n      --accent-background: #{brand-colour(\"navy\")} !important;\n      --accent-background-light: #{brand-colour(\"pastel-blue\")} !important;\n      --button-accent-background: #{brand-colour(\"navy\")} !important;\n    }\n  }\n}\n\n@mixin colour-font(\n  $colour,\n  $important: false,\n  $default-palette: colour.$colour-palette-default\n) {\n  color: map.get($default-palette, $colour) if($important, !important, null);\n  color: var(--#{$colour}) if($important, !important, null);\n}\n\n@mixin colour-background($colour, $important: false) {\n  background-color: map.get(colour.$colour-palette-default, $colour)\n    if($important, !important, null);\n  background-color: var(--#{$colour}) if($important, !important, null);\n}\n\n@mixin colour-background-brand($brandColour, $important: false) {\n  background-color: #{brand-colour($brandColour)} if($important, !important, null);\n}\n\n@mixin colour-border(\n  $colour,\n  $width: \"\",\n  $style: solid,\n  $direction: \"\",\n  $important: false\n) {\n  @if $direction != \"\" {\n    @if $width != \"\" {\n      $property: border-#{$direction};\n      border-#{$direction}: $width\n        map.get(colour.$colour-palette-default, $colour)\n        $style\n        if($important, !important, null);\n      border-#{$direction}: $width\n        var(--#{$colour})\n        $style\n        if($important, !important, null);\n    } @else {\n      border-#{$direction}-color: map.get(\n          colour.$colour-palette-default,\n          $colour\n        )\n        if($important, !important, null);\n      border-#{$direction}-color: var(--#{$colour})\n        if($important, !important, null);\n    }\n  } @else {\n    @if $width != \"\" {\n      border: $width\n        map.get(colour.$colour-palette-default, $colour)\n        $style\n        if($important, !important, null);\n      border: $width var(--#{$colour}) $style if($important, !important, null);\n    } @else {\n      border-color: map.get(colour.$colour-palette-default, $colour)\n        if($important, !important, null);\n      border-color: var(--#{$colour}) if($important, !important, null);\n    }\n  }\n}\n\n@mixin colour-outline($colour, $width: \"\", $style: solid, $important: false) {\n  @if $width != \"\" {\n    outline: $width\n      map.get(colour.$colour-palette-default, $colour)\n      $style\n      if($important, !important, null);\n    outline: $width var(--#{$colour}) $style if($important, !important, null);\n  } @else {\n    outline-color: map.get(colour.$colour-palette-default, $colour)\n      if($important, !important, null);\n    outline-color: var(--#{$colour}) if($important, !important, null);\n  }\n}\n\n@mixin colour-fill($colour, $important: false) {\n  fill: map.get(colour.$colour-palette-default, $colour)\n    if($important, !important, null);\n  fill: var(--#{$colour}) if($important, !important, null);\n}\n\n@mixin thick-keyline($direction) {\n  @include colour-border(\"keyline\", 5px, solid, $direction);\n}\n\n@mixin thick-keyline-dark($direction) {\n  @include colour-border(\"keyline-dark\", 5px, solid, $direction);\n}\n\n@mixin thick-keyline-accent($direction) {\n  @include colour-border(\"accent-background\", 5px, solid, $direction);\n}\n\n@mixin thick-keyline-error($direction) {\n  @include colour-border(\"form-error\", 5px, solid, $direction);\n}\n\n@mixin thick-keyline-brand($direction, $brandColour) {\n  border-#{$direction}: 5px #{brand-colour($brandColour)} solid;\n}\n\n%light {\n  @include colour-css-vars(\"form-error\");\n\n  @media (prefers-contrast: more) {\n    @include colour-css-vars-high-contrast(\"form-error\");\n  }\n\n  .tna-template--high-contrast-theme & {\n    @include colour-css-vars-high-contrast(\"form-error\");\n  }\n}\n\n@mixin light {\n  @extend %light;\n}\n\n%dark {\n  @include colour-css-vars-dark(\"form-error\");\n\n  @media (prefers-contrast: more) {\n    @include colour-css-vars-high-contrast-dark(\"form-error\");\n  }\n\n  .tna-template--high-contrast-theme & {\n    @include colour-css-vars-high-contrast-dark(\"form-error\");\n  }\n}\n\n@mixin dark {\n  @extend %dark;\n}\n\n%plain {\n  .tna-template--system-theme & {\n    @extend %light;\n\n    @media (prefers-color-scheme: dark) {\n      @include colour-css-vars-dark;\n    }\n\n    @media (prefers-contrast: more) and (prefers-color-scheme: dark) {\n      @include colour-css-vars-high-contrast-dark;\n    }\n  }\n\n  .tna-template--light-theme & {\n    @include colour-css-vars;\n  }\n\n  .tna-template--dark-theme & {\n    @include colour-css-vars-dark;\n  }\n\n  .tna-template--high-contrast-theme & {\n    @include colour-css-vars-high-contrast;\n  }\n\n  .tna-template--high-contrast-theme.tna-template--dark-theme & {\n    @include colour-css-vars-high-contrast-dark;\n  }\n\n  --background: var(--page-background);\n}\n\n@mixin plain {\n  @extend %plain;\n}\n\n%contrast {\n  --background: var(--contrast-background);\n  --font-base: var(--contrast-font-base);\n  --font-dark: var(--contrast-font-dark);\n  --font-light: var(--contrast-font-light);\n  --icon-light: var(--contrast-icon-light);\n  --link: var(--contrast-link);\n  --link-visited: var(--contrast-link-visited);\n  --keyline: var(--contrast-keyline);\n  --keyline-dark: var(--contrast-keyline-dark);\n  --button-text: var(--contrast-button-text);\n  --button-background: var(--contrast-button-background);\n  --button-hover-text: var(--contrast-button-hover-text);\n  --button-hover-background: var(--contrast-button-hover-background);\n\n  @include colour-background(\"background\");\n\n  @include colour-font(\"font-base\", false, colour.$colour-palette-dark);\n}\n\n@mixin contrast {\n  @extend %contrast;\n}\n\n%contrast-on-mobile {\n  @include media.on-mobile {\n    --background: var(--contrast-background);\n    --font-base: var(--contrast-font-base);\n    --font-dark: var(--contrast-font-dark);\n    --font-light: var(--contrast-font-light);\n    --icon-light: var(--contrast-icon-light);\n    --link: var(--contrast-link);\n    --link-visited: var(--contrast-link-visited);\n    --keyline: var(--contrast-keyline);\n    --keyline-dark: var(--contrast-keyline-dark);\n    --button-text: var(--contrast-button-text);\n    --button-background: var(--contrast-button-background);\n    --button-hover-text: var(--contrast-button-hover-text);\n    --button-hover-background: var(--contrast-button-hover-background);\n\n    @include colour-background(\"background\");\n\n    @include colour-font(\"font-base\", false, colour.$colour-palette-dark);\n  }\n}\n\n@mixin contrast-on-mobile {\n  @extend %contrast-on-mobile;\n}\n\n%accent {\n  --background: var(--accent-background);\n  --font-base: var(--accent-font-base);\n  --font-dark: var(--accent-font-dark);\n  --font-light: var(--accent-font-light);\n  --icon-light: var(--accent-icon-light);\n  --link: var(--accent-link);\n  --link-visited: var(--accent-link);\n  --keyline: var(--accent-keyline);\n  --keyline-dark: var(--accent-keyline-dark);\n\n  @include colour-background(\"background\");\n\n  @include colour-font(\"font-base\", false, colour.$colour-palette-dark);\n}\n\n@mixin accent {\n  @extend %accent;\n}\n\n%tint {\n  @include colour-background(\"background-tint\");\n  @include colour-font(\"font-base\");\n}\n\n@mixin tint {\n  @extend %tint;\n}\n\n%accent-background {\n  @include colour-background(\"accent-background\");\n}\n\n@mixin accent-background {\n  @extend %accent-background;\n}\n\n%accent-light {\n  --background: var(--accent-background-light);\n  --font-base: #{map.get(colour.$colour-palette-default, \"font-base\")};\n  --font-dark: #{map.get(colour.$colour-palette-default, \"font-dark\")};\n  --font-light: #{map.get(colour.$colour-palette-default, \"font-light\")};\n  --icon-light: #{map.get(colour.$colour-palette-default, \"icon-light\")};\n  // --link: #{map.get(colour.$colour-palette-default, \"link\")};\n  // --link-visited: #{map.get(colour.$colour-palette-default, \"link-visited\")};\n  --keyline: #{map.get(colour.$colour-palette-default, \"keyline\")};\n  --keyline-dark: #{map.get(colour.$colour-palette-default, \"keyline-dark\")};\n  --button-text: #{map.get(colour.$colour-palette-default, \"button-text\")};\n  --button-background: #{map.get(\n      colour.$colour-palette-default,\n      \"button-background\"\n    )};\n  --button-hover-text: #{map.get(\n      colour.$colour-palette-default,\n      \"button-hover-text\"\n    )};\n  --button-hover-background: #{map.get(\n      colour.$colour-palette-default,\n      \"button-hover-background\"\n    )};\n\n  @include colour-background(\"background\");\n  @include colour-font(\"font-base\");\n\n  .tna-template--system-theme & {\n    @media (prefers-color-scheme: dark) {\n      --link: #{map.get(colour.$colour-palette-default, \"link\")};\n      --link-visited: #{map.get(colour.$colour-palette-default, \"link-visited\")};\n    }\n  }\n\n  .tna-template--dark-theme & {\n    --link: #{map.get(colour.$colour-palette-default, \"link\")};\n    --link-visited: #{map.get(colour.$colour-palette-default, \"link-visited\")};\n  }\n}\n\n@mixin accent-light {\n  @extend %accent-light;\n}\n\n@mixin on-high-contrast {\n  .tna-template--high-contrast-theme & {\n    @content;\n  }\n\n  .tna-template--system-theme & {\n    @media (prefers-contrast: more) {\n      @content;\n    }\n  }\n}\n\n@mixin on-forced-colours {\n  @media (forced-colors: active) {\n    @content;\n  }\n}\n\n@mixin on-high-contrast-and-forced-colours {\n  @include on-forced-colours {\n    @content;\n  }\n\n  @include on-high-contrast {\n    @content;\n  }\n}\n","@use \"../tools/colour\";\n\n// :root {\n//   @include colour.colour-css-vars;\n// }\n\n.tna-template {\n  @include colour.colour-background(\"page-background\");\n\n  &--system-theme {\n    @include colour.colour-css-vars;\n\n    @media (prefers-color-scheme: dark) {\n      @include colour.colour-css-vars-dark;\n    }\n\n    @media (prefers-contrast: more) {\n      @include colour.colour-css-vars-high-contrast;\n\n      * {\n        background-image: none !important;\n      }\n    }\n\n    @media (prefers-contrast: more) and (prefers-color-scheme: dark) {\n      @include colour.colour-css-vars-high-contrast-dark;\n    }\n  }\n\n  &--light-theme {\n    @include colour.colour-css-vars;\n  }\n\n  &--dark-theme {\n    @include colour.colour-css-vars-dark;\n  }\n\n  &--high-contrast-theme {\n    @include colour.colour-css-vars-high-contrast;\n\n    * {\n      background-image: none !important;\n    }\n\n    &.tna-template--dark-theme {\n      @include colour.colour-css-vars-high-contrast-dark;\n    }\n  }\n\n  &--yellow-accent {\n    @include colour.accent-css-vars(\"yellow\");\n  }\n\n  &--pink-accent {\n    @include colour.accent-css-vars(\"pink\");\n  }\n\n  &--orange-accent {\n    @include colour.accent-css-vars(\"orange\");\n  }\n\n  &--green-accent {\n    @include colour.accent-css-vars(\"green\");\n  }\n\n  &--blue-accent {\n    @include colour.accent-css-vars(\"blue\");\n  }\n\n  @media (prefers-reduced-motion) {\n    * {\n      animation: none !important;\n      transition: none !important;\n    }\n  }\n}\n\n.tna-background {\n  &-tint {\n    @include colour.tint;\n  }\n\n  &-contrast {\n    @include colour.contrast;\n  }\n\n  &-accent {\n    @include colour.accent;\n  }\n\n  &-accent-light {\n    @include colour.accent-light;\n  }\n}\n\n.tna-border {\n  &-keyline {\n    @include colour.colour-border(\"keyline\", 1px);\n  }\n\n  &-keyline-dark {\n    @include colour.colour-border(\"keyline-dark\", 1px);\n  }\n}\n","@use \"sass:math\";\n@use \"../../variables/grid\" as gridVars;\n@use \"../../tools/colour\";\n@use \"../../tools/typography\";\n@use \"../../tools/media\";\n\n.tna-global-header {\n  padding-top: 1rem;\n\n  @include colour.contrast;\n\n  .tna-template--light-theme & {\n    background: linear-gradient(\n      0deg,\n      rgb(34 34 34 / 100%) 0%,\n      rgb(0 0 0 / 100%) 100%\n    );\n  }\n\n  .tna-template--dark-theme & {\n    background: #000;\n  }\n\n  .tna-template--system-theme {\n    @media (prefers-color-scheme: light) {\n      background: linear-gradient(\n        0deg,\n        rgb(34 34 34 / 100%) 0%,\n        rgb(0 0 0 / 100%) 100%\n      );\n    }\n\n    @media (prefers-color-scheme: dark) {\n      background: #000;\n    }\n  }\n\n  &__main {\n    padding-bottom: 1.5rem;\n  }\n\n  &__logo-wrapper {\n    margin-top: 0.5rem;\n\n    display: flex;\n  }\n\n  &__logo {\n    display: flex;\n    gap: 1rem;\n    align-items: flex-end;\n\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: none;\n\n      @include colour.colour-outline(\"font-dark\", 0.3125rem, solid);\n      outline-offset: 1px;\n    }\n  }\n\n  .tna-logo {\n    width: 6.75rem;\n    height: 6.75rem;\n\n    flex-shrink: 0;\n  }\n\n  &__logo-strapline {\n    padding-right: 0.625rem;\n\n    @include typography.heading-font;\n    @include typography.relative-font-size(20);\n    text-transform: uppercase;\n    line-height: math.div(6.75rem, 3);\n  }\n\n  &__navigation-button-wrapper {\n    display: none;\n  }\n\n  &__hamburger {\n    width: 2rem;\n    height: 0.25rem;\n\n    display: block;\n\n    @include colour.colour-background(\"font-dark\");\n\n    &::before,\n    &::after {\n      height: 0.25rem;\n\n      display: block;\n\n      position: absolute;\n      right: 0;\n      left: 0;\n\n      background-color: inherit;\n\n      content: \"\";\n    }\n\n    &::before {\n      top: 0;\n    }\n\n    &::after {\n      bottom: 0;\n    }\n  }\n\n  &__navigation-button {\n    height: 2rem;\n    padding: 0;\n\n    display: block;\n\n    position: relative;\n\n    appearance: none;\n\n    font-size: 0;\n\n    background: none;\n\n    border: 0 transparent solid;\n    border-width: 0.25rem 0;\n\n    cursor: pointer;\n\n    &--opened {\n      .tna-global-header__hamburger {\n        height: 0;\n\n        &::before {\n          top: 0.625rem;\n\n          transform: rotate(-135deg);\n        }\n\n        &::after {\n          bottom: 0.625rem;\n\n          transform: rotate(135deg);\n        }\n      }\n    }\n  }\n\n  &__navigation-wrapper {\n  }\n\n  &__navigation {\n    margin: 0.5rem 0 0;\n    height: 100%;\n\n    position: relative;\n\n    columns: 2;\n    column-gap: 2rem;\n    list-style: none;\n  }\n\n  &__navigation-item {\n    break-inside: avoid;\n  }\n\n  &__navigation-item-link {\n    min-width: 15rem;\n    height: math.div(6.75rem, 3);\n\n    display: block;\n    box-sizing: border-box;\n\n    @include typography.relative-font-size(17);\n    text-decoration: none;\n    line-height: math.div(6.75rem, 3);\n\n    @include colour.colour-border(\"keyline\", 0.5px, solid, bottom);\n\n    &:hover {\n      @include typography.interacted-text-decoration;\n    }\n  }\n\n  &__top-navigation {\n    padding: 0 0 0.5rem;\n\n    display: flex;\n    justify-content: flex-end;\n    gap: 1.5rem;\n\n    @include typography.relative-font-size(15);\n    list-style: none;\n  }\n\n  &__top-navigation-item {\n  }\n\n  &__top-navigation-link {\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n\n    text-decoration: none;\n\n    &,\n    &:link,\n    &:visited {\n      @include colour.colour-font(\"font-light\");\n    }\n\n    &:hover {\n      @include colour.colour-font(\"font-base\");\n      @include typography.interacted-text-decoration;\n    }\n\n    svg {\n      height: 1em;\n\n      display: inline-block;\n\n      path {\n        fill: currentColor;\n      }\n    }\n  }\n\n  @include media.on-medium {\n    &__navigation {\n      column-gap: 1rem;\n    }\n\n    &__navigation-item-link {\n      @include typography.relative-font-size(16);\n    }\n\n    &--collapse-on-medium &__navigation-wrapper {\n      width: 100%;\n    }\n\n    &--collapse-on-medium &__top-navigation-wrapper {\n      flex: 1;\n      order: 2;\n    }\n\n    &--collapse-on-medium &__main {\n      padding-bottom: 1rem;\n    }\n\n    &--collapse-on-medium &__logo {\n      gap: 0.75rem;\n    }\n\n    &--collapse-on-medium &__logo-wrapper {\n      margin-top: 0.5rem;\n      margin-bottom: 0.5rem;\n    }\n\n    &--collapse-on-medium .tna-logo {\n      width: 5rem;\n      height: 5rem;\n    }\n\n    &--collapse-on-medium &__logo-strapline {\n      line-height: math.div(5rem, 3);\n    }\n\n    &--collapse-on-medium &__navigation {\n      margin-bottom: 0.5rem;\n    }\n\n    &--collapse-on-medium &__navigation,\n    &--collapse-on-medium &__navigation-item,\n    &--collapse-on-medium &__navigation-item-link {\n      height: auto;\n    }\n  }\n\n  @include media.on-mobile {\n    &__main {\n      padding-bottom: 0;\n    }\n\n    &__logo-wrapper,\n    &__navigation-button-wrapper {\n      margin-top: 0;\n      margin-bottom: 1rem;\n    }\n\n    &__logo {\n      gap: 0.75rem;\n    }\n\n    &__navigation-button-wrapper {\n      display: flex;\n      align-items: center;\n    }\n\n    &__navigation,\n    &__navigation-item,\n    &__navigation-item-link {\n      height: auto;\n    }\n\n    &__navigation {\n      margin-top: 0;\n\n      columns: 1;\n\n      background-color: rgb(255 255 255 / 10%);\n\n      @include colour.colour-border(\"keyline-dark\", 2px, solid, top);\n      @include colour.colour-border(\"keyline-dark\", 2px, solid, bottom);\n    }\n\n    &__navigation-item {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n\n    &__navigation-item-link {\n      line-height: 1.75rem;\n      @include typography.main-font-weight-bold;\n    }\n\n    &__navigation-item:last-child &__navigation-item-link {\n      border-bottom: none;\n    }\n\n    &__navigation-item-contents {\n      display: block;\n    }\n\n    &__navigation-item-children {\n      margin-bottom: 1rem;\n      margin-left: 1.5rem;\n    }\n\n    &__top-navigation {\n      padding-top: 1rem;\n      padding-bottom: 1rem;\n\n      justify-content: flex-start;\n    }\n  }\n\n  @include media.on-small {\n    .tna-logo {\n      width: 4rem;\n      height: 4rem;\n    }\n\n    &__logo-strapline {\n      line-height: 1.25rem;\n    }\n\n    &__navigation {\n      width: calc(100% + #{gridVars.$gutter-width * 2});\n\n      left: -#{gridVars.$gutter-width};\n    }\n\n    &__navigation-item-link {\n      padding: 0.5rem gridVars.$gutter-width;\n    }\n  }\n\n  @include media.on-tiny {\n    .tna-logo {\n      width: 3.5rem;\n      height: 3.5rem;\n    }\n\n    &__logo-strapline {\n      line-height: 1;\n    }\n\n    &__navigation {\n      width: calc(100% + #{gridVars.$gutter-width-tiny * 2});\n\n      left: -#{gridVars.$gutter-width-tiny};\n    }\n\n    &__navigation-item-link {\n      padding: 0.5rem gridVars.$gutter-width-tiny;\n    }\n  }\n}\n","@use \"sass:math\";\n@use \"colour\";\n@use \"../variables/typography\";\n\n@mixin relative-font-size($fontSizePx) {\n  font-size: #{math.div($fontSizePx, typography.$relative-1rem-px)}rem;\n}\n\n@mixin main-font-weight {\n  font-weight: typography.$main-font-weight;\n}\n\n@mixin main-font-weight-bold {\n  font-weight: typography.$main-font-weight-bold;\n}\n\n@mixin main-font($bold: false) {\n  font-family: typography.$main-font-family;\n  @if $bold {\n    @include main-font-weight-bold;\n  } @else {\n    @include main-font-weight;\n  }\n  font-optical-sizing: auto;\n  font-style: normal;\n  font-variation-settings: \"wdth\" 100;\n}\n\n@mixin heading-font {\n  font-family: typography.$heading-font-family;\n  font-weight: typography.$heading-font-weight;\n}\n\n@mixin detail-font($bold: false) {\n  font-family: typography.$detail-font-family;\n  @if $bold {\n    font-weight: typography.$detail-font-weight-bold;\n  } @else {\n    font-weight: typography.$detail-font-weight;\n  }\n  font-optical-sizing: auto;\n  font-style: normal;\n}\n\n@mixin detail-font-small {\n  @include detail-font;\n  @include relative-font-size(14);\n  text-transform: uppercase;\n  line-height: #{math.div(typography.$relative-1rem-px, 14)};\n}\n\n@mixin interacted-text-decoration {\n  text-decoration: underline;\n  text-decoration-thickness: typography.$interactive-text-decoration-thickness;\n}\n","@use \"sass:math\";\n\n$use-local-fonts: false !default;\n\n$relative-1rem-px: 16; // 16px is always 1rem\n\n$body-font-size-px: 18 !default;\n$body-font-size-px-mobile: 17 !default;\n$body-line-height: #{math.div($relative-1rem-px, $body-font-size-px) * 2} !default; // 1.77777\n\n$interactive-text-decoration-thickness: 3.5px !default;\n\n$main-font: \"Open Sans\" !default;\n$main-font-family: $main-font, sans-serif !default;\n$main-font-weight: 400 !default;\n$main-font-weight-bold: 700 !default;\n\n$heading-font-family: supria-sans-condensed, \"Arial Narrow\", sans-serif !default;\n$heading-font-weight: 500 !default;\n\n$detail-font-family: \"Roboto Mono\", monospace !default;\n$detail-font-weight: 400 !default;\n$detail-font-weight-bold: 500 !default;\n","@use \"../variables/media\";\n\n//   0 ======= 320 = 480 ===== 768 == 1024 ========================== min-width/max-width (px)\n//   |         .     |         |      |\n//   |-TINY----------|-SMALL---|-MED--|-LARGE------------------------\n//   |         .     |         |      |\n//   |<------------->|         |      |            on-tiny\n//   |<----------------------->|      |            on-mobile\n//   |<------------------------------>|            on-smaller-than-large\n//   |         .     |<------->|      |            on-small\n//   |         .     |<-------------------------   on-larger-than-tiny\n//   |         .     |         |<---->|            on-medium\n//   |         .     |         |<---------------   on-larger-than-mobile\n//   |         .     |         |      |<--------   on-large\n//   |<------->.     |         |      |            Smallest device\n\n@mixin on-large() {\n  @media #{media.$media-large} {\n    @content;\n  }\n}\n\n@mixin on-medium() {\n  @media #{media.$media-medium} {\n    @content;\n  }\n}\n\n@mixin on-small() {\n  @media #{media.$media-small} {\n    @content;\n  }\n}\n\n@mixin on-tiny() {\n  @media #{media.$media-tiny} {\n    @content;\n  }\n}\n\n@mixin on-larger-than-mobile() {\n  @media #{media.$media-gt-mobile} {\n    @content;\n  }\n}\n\n@mixin on-larger-than-tiny() {\n  @media #{media.$media-gt-tiny} {\n    @content;\n  }\n}\n\n@mixin on-smaller-than-large() {\n  @media #{media.$media-lt-large} {\n    @content;\n  }\n}\n\n@mixin on-mobile() {\n  @media #{media.$media-mobile} {\n    @content;\n  }\n}\n\n@mixin on-print() {\n  @media print {\n    @content;\n  }\n}\n","@use \"sass:math\";\n@use \"../../variables/grid\";\n@use \"../../tools/media\";\n@use \"../../tools/grid\" as gridTools;\n\n.tna-container {\n  max-width: grid.$largest-container-width;\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n  padding-right: math.div(grid.$gutter-width, 2);\n  padding-left: math.div(grid.$gutter-width, 2);\n\n  box-sizing: border-box;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: stretch;\n\n  &--no-padding,\n  &--no-padding-all {\n    max-width: grid.$largest-container-width - (grid.$gutter-width * 2);\n  }\n\n  &--max {\n    max-width: none;\n  }\n\n  &--centred {\n    justify-content: center;\n  }\n}\n\n.tna-column {\n  padding-right: math.div(grid.$gutter-width, 2);\n  padding-left: math.div(grid.$gutter-width, 2);\n\n  box-sizing: border-box;\n\n  &--container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: stretch;\n    align-items: stretch;\n  }\n\n  &--align-top {\n    align-self: flex-start;\n  }\n\n  &--align-centre {\n    align-self: center;\n  }\n\n  &--align-bottom {\n    align-self: flex-end;\n  }\n}\n\n@include gridTools.columns-generator(grid.$column-count);\n\n@include media.on-medium {\n  @include gridTools.columns-generator(grid.$column-count-medium, \"medium\");\n}\n\n@include media.on-tiny {\n  .tna-container {\n    padding-right: math.div(grid.$gutter-width-tiny, 2);\n    padding-left: math.div(grid.$gutter-width-tiny, 2);\n  }\n\n  .tna-column {\n    padding-right: math.div(grid.$gutter-width-tiny, 2);\n    padding-left: math.div(grid.$gutter-width-tiny, 2);\n  }\n}\n\n@include media.on-small {\n  @include gridTools.columns-generator(grid.$column-count-small, \"small\");\n}\n\n@include media.on-tiny {\n  @include gridTools.columns-generator(grid.$column-count-tiny, \"tiny\");\n}\n\n.tna-container--no-padding,\n.tna-container--no-padding-all,\n.tna-container--no-padding-all > .tna-column,\n.tna-column--no-padding,\n.tna-column--container--no-padding-all,\n.tna-column--container--no-padding-all > .tna-column {\n  padding-right: 0;\n  padding-left: 0;\n}\n","// @use \"variables/assets\";\n@use \"variables/grid\" as gridVars with (\n  $largest-container-width: 1270px,\n  $gutter-width: 30px,\n  $gutter-width-tiny: 15px\n);\n@use \"variables/typography\" as typographyVars;\n\n@use \"tools/colour\";\n@use \"tools/typography\";\n\n@use \"utilities/colour\" as colourUtils;\n\n@use \"components/global-header\";\n@use \"components/grid\";\n@use \"components/footer\";\n\n.tna-template {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  text-rendering: optimizeLegibility;\n  -webkit-text-size-adjust: none;\n  text-size-adjust: none;\n  direction: ltr;\n  font-size: #{typographyVars.$relative-1rem-px}px;\n}\n\n.tna-global-header,\n.tna-footer {\n  color: inherit;\n\n  a {\n    text-decoration: none;\n    text-decoration-thickness: 1.5px;\n\n    &,\n    &:link {\n      @include colour.colour-font(\"link\");\n    }\n\n    &:visited {\n      @include colour.colour-font(\"link-visited\");\n    }\n\n    &:hover,\n    &:active {\n      @include typography.interacted-text-decoration;\n\n      background: none;\n    }\n\n    &:focus {\n      background: none;\n    }\n\n    &.tna-link--no-visited-state {\n      &:visited {\n        @include colour.colour-font(\"link\");\n      }\n    }\n  }\n}\n\n.tna-global-header {\n  padding-bottom: 0;\n\n  &__logo:link {\n    display: flex;\n  }\n\n  &__navigation {\n    padding: 0;\n\n    &-item {\n      margin-left: 0;\n      margin-bottom: 0;\n\n      &-link {\n        &:hover {\n          outline: none;\n        }\n      }\n    }\n  }\n\n  &__top-navigation {\n    margin-bottom: 0;\n\n    &-item {\n      margin-left: 0;\n    }\n\n    &-link {\n      &:hover {\n        outline: none;\n      }\n    }\n  }\n}\n","@use \"sass:math\";\n@use \"../variables/grid\";\n\n@mixin columns-generator($count, $suffix: \"\") {\n  @if $suffix != \"\" {\n    $suffix: \"-\" + $suffix;\n  }\n\n  .tna-column {\n    &--full#{$suffix} {\n      width: 100%;\n      flex: none;\n    }\n\n    @for $i from 1 through $count - 1 {\n      $simplest-fraction-found: false;\n\n      @for $j from math.div($count, 2) through 1 {\n        @if (\n          $count % $j == 0 and $i % $j == 0 and $simplest-fraction-found != true\n        ) {\n          &--width-#{math.div($i, $j)}-#{math.div($count, $j)}#{$suffix} {\n            width: math.div(100%, $count) * $i;\n            flex: none;\n          }\n\n          &--margin-right-#{math.div($i, $j)}-#{math.div($count, $j)}#{$suffix} {\n            margin-right: math.div(100%, $count) * $i;\n          }\n\n          &--margin-left-#{math.div($i, $j)}-#{math.div($count, $j)}#{$suffix} {\n            margin-left: math.div(100%, $count) * $i;\n          }\n\n          $simplest-fraction-found: true;\n        }\n      }\n\n      @if $simplest-fraction-found != true {\n        &--width-#{$i}-#{$count}#{$suffix} {\n          width: math.div(100%, $count) * $i;\n          flex: none;\n        }\n\n        &--margin-right-#{$i}-#{$count}#{$suffix} {\n          margin-right: math.div(100%, $count) * $i;\n        }\n\n        &--margin-left-#{$i}-#{$count}#{$suffix} {\n          margin-left: math.div(100%, $count) * $i;\n        }\n      }\n    }\n\n    @for $i from 1 through 3 {\n      &--flex-#{$i}#{$suffix} {\n        width: auto;\n\n        flex: $i 0;\n      }\n    }\n\n    @for $i from 1 through 4 {\n      &--order-#{$i}#{$suffix} {\n        order: $i;\n      }\n    }\n  }\n}\n","@use \"../../tools/colour\";\n@use \"../../tools/typography\";\n@use \"../../tools/media\";\n\n.tna-footer {\n  @include colour.contrast;\n\n  padding-top: 1rem;\n  padding-bottom: 3rem;\n\n  .tna-logo {\n    margin-top: 2rem;\n\n    &__background {\n      fill: transparent;\n    }\n\n    &__foreground {\n      fill: currentColor;\n    }\n  }\n\n  &__title {\n    margin-top: 1rem;\n    margin-bottom: 0;\n    padding-top: 0;\n  }\n\n  &__address {\n    font-style: normal;\n  }\n\n  &__meta {\n    margin-top: 1rem;\n\n    @include typography.relative-font-size(16);\n  }\n\n  &__social {\n    margin-top: 2rem;\n\n    &-items {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.3125rem;\n      align-items: flex-start;\n    }\n\n    &-item {\n      &-link {\n        width: calc(2rem + 8px);\n        height: 2rem;\n        padding: 4px;\n\n        display: block;\n\n        text-align: center;\n        line-height: 1;\n\n        border: 0 transparent solid;\n        border-width: 4px 0;\n\n        svg {\n          height: 2rem;\n\n          display: inline-block;\n\n          path {\n            fill: currentColor;\n          }\n        }\n\n        &-text {\n        }\n\n        &:hover {\n          @include colour.colour-border(\"link\", 4px, solid, bottom);\n        }\n      }\n    }\n  }\n\n  &__mailing-list {\n    margin-top: 2rem;\n    padding: 1rem;\n\n    @include typography.relative-font-size(16);\n\n    @include colour.colour-border(\"keyline-dark\", 1px, dashed);\n\n    background-color: rgb(255 255 255 / 10%);\n  }\n\n  &__navigation {\n    &-block {\n      padding-top: 2rem;\n\n      &-heading {\n      }\n\n      &-items {\n      }\n\n      &-item {\n        padding-top: 0.375rem;\n        padding-bottom: 0.375rem;\n\n        @include typography.relative-font-size(16);\n\n        @include colour.colour-border(\"keyline\", 1px, solid, bottom);\n\n        &-link {\n          display: inline-block;\n\n          text-decoration: none;\n\n          &:hover {\n            @include typography.interacted-text-decoration;\n          }\n\n          .fa-solid {\n            margin-left: 0.75rem;\n          }\n        }\n      }\n    }\n  }\n\n  &__legal {\n    padding-top: 3rem;\n\n    @include typography.relative-font-size(16);\n\n    &-items {\n      margin-bottom: 0;\n\n      text-align: center;\n\n      @include media.on-tiny {\n        text-align: inherit;\n      }\n    }\n\n    &-item {\n      padding: 0.5rem;\n\n      display: inline-block;\n\n      @include media.on-tiny {\n        display: block;\n      }\n\n      &-link {\n      }\n    }\n  }\n\n  hr {\n    margin-top: 1.5rem;\n    margin-bottom: 0.5rem;\n  }\n\n  &__licence {\n    @include typography.relative-font-size(16);\n\n    &.tna-container {\n      align-items: center;\n    }\n\n    .tna-column {\n      margin-top: 1rem;\n    }\n  }\n\n  &__licence-logo {\n    display: block;\n  }\n\n  &__govuk {\n    text-align: center;\n\n    &-link {\n      display: inline-block;\n    }\n\n    &-logotype-crown {\n      margin: 0 auto 0.125rem;\n\n      display: block;\n    }\n  }\n\n  @include media.on-mobile {\n    padding-top: 0;\n    padding-bottom: 2rem;\n  }\n\n  @include colour.on-high-contrast-and-forced-colours {\n    @include colour.colour-border(\"keyline\", 1px, solid, top);\n\n    &__navigation {\n      &-block {\n        &-items {\n          @include colour.colour-border(\"keyline-dark\", 4px, solid, top);\n        }\n      }\n    }\n\n    &__mailing-list {\n      background-color: transparent;\n\n      @include colour.colour-border(\"keyline-dark\", 1px, solid);\n    }\n  }\n}\n"]}